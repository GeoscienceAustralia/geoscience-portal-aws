{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "CloudFormation template for the Geoscience Australia Experimental Environment ",

  "Parameters" : {
    
      "SystemName" : {
	  "Description" : "Name of the new Experimental Environment",
	  "Type" : "String",
	  "MinLength": "1",
	  "MaxLength": "64",
	  "Default" :  "EXPERIMENTALENV",
	  "AllowedPattern" : "[-_ a-zA-Z0-9]*",
	  "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
      },   

      "KeyPairName" : {
	  "Description" : "Name of an existing EC2 KeyPair (find or create here: https://console.aws.amazon.com/ec2/v2/home#KeyPairs: )",
	  "Type" : "String",
	  "MinLength": "1",
	  "MaxLength": "64",
	  "AllowedPattern" : "[-_ a-zA-Z0-9]*",
	  "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
      },

      "ServerAccess" : {
	  "Description" : "CIDR IP range allowed to login to the NAT instance",
	  "Type" : "String",
	  "MinLength": "9",
	  "MaxLength": "18",
	  "Default" : "0.0.0.0/0",
	  "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
	  "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
      }    
  },

  "Mappings" : {
    "SubnetConfig" : {
	"VPC"        : { "CIDR" : "10.0.0.0/16" },
	"PublicAZ1"  : { "CIDR" : "10.0.0.0/24" },
	"PublicAZ2"  : { "CIDR" : "10.0.10.0/24"},
	"PrivateAZ1" : { "CIDR" : "10.0.1.0/24" },
	"PrivateAZ2" : { "CIDR" : "10.0.11.0/24" }
    },
	
    "NatRegionMap" : {
      "us-east-1"      : { "AMI" : "ami-184dc970" },
      "us-west-1"      : { "AMI" : "ami-a98396ec" },
      "us-west-2"      : { "AMI" : "ami-290f4119" },
      "eu-west-1"      : { "AMI" : "ami-14913f63" },
      "eu-central-1"   : { "AMI" : "ami-ae380eb3" },
      "sa-east-1"      : { "AMI" : "ami-8122969c" },
      "ap-southeast-1" : { "AMI" : "ami-6aa38238" },
      "ap-southeast-2" : { "AMI" : "ami-893f53b3" },
      "ap-northeast-1" : { "AMI" : "ami-27d6e626" }
    },


    "AvailabilityZones" : {
	    "AZ1"      : { "AZ1" : "ap-southeast-2a" },
	    "AZ2"      : { "AZ2" : "ap-southeast-2b" }
    },
	
	"MachineImages" : {
	"WebServer"     : { "AMI" : "ami-c11856fb" }
    },
	
	
    "Naming" : {
	"InstanceValues" : {
	"Environment" : "Experimental"
	}
    }	
	
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "Tags" : [
			{ "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
			{ "Key" : "Network", "Value" : "Public" },
			{ "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" },"VPC" ] ] }},   
	                { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
			{ "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },

    "PublicSubnetAZ1" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone": { "Fn::FindInMap" : [ "AvailabilityZones", "AZ1", "AZ1" ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "PublicAZ1", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "PUBLIC_SUBNET_AZ1" ] ] }},  
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },
	
	 "PublicSubnetAZ2" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone": { "Fn::FindInMap" : [ "AvailabilityZones", "AZ2", "AZ2" ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "PublicAZ2", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "PUBLIC_SUBNET_AZ2" ] ] }},  
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "INTERNET_GATEWAY" ] ] }},
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },

    "GatewayToInternet" : {
       "DependsOn" : ["VPC", "InternetGateway"],
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "PUBLIC_ROUTE_TABLE" ] ] }},
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },

    "PublicRoute" : {
      "DependsOn" : ["PublicRouteTable", "InternetGateway"],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetAZ1RouteTableAssociation" : {
      "DependsOn" : ["PublicSubnetAZ1", "PublicRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetAZ1" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
	
	"PublicSubnetAZ2RouteTableAssociation" : {
      "DependsOn" : ["PublicSubnetAZ2", "PublicRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetAZ2" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PrivateSubnetAZ1" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone": { "Fn::FindInMap" : [ "AvailabilityZones", "AZ1", "AZ1" ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "PrivateAZ1", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" },
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "PRIVATE_SUBNET_AZ2" ] ] }},
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },

    "PrivateSubnetAZ2" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
      "VpcId" : { "Ref" : "VPC" },
      "AvailabilityZone": { "Fn::FindInMap" : [ "AvailabilityZones", "AZ2", "AZ2" ]},
      "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "PrivateAZ2", "CIDR" ]},
      "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" },
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "PRIVATE_SUBNET_AZ2" ] ] }},
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },
	
	
    "PrivateRouteTableAZ1" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "PRIVATE_ROUTE_TABLEAZ1" ] ] }},
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" },
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },


    "PrivateRouteTableAZ2" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "PRIVATE_ROUTE_TABLEAZ2" ] ] }},
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" },
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },


      
    "PrivateSubnetAZ1RouteTableAssociation" : {
      "DependsOn" : ["PrivateSubnetAZ1", "PrivateRouteTableAZ1"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetAZ1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableAZ1" }
      }
    },
	
    "PrivateSubnetAZ2RouteTableAssociation" : {
      "DependsOn" : ["PrivateSubnetAZ2", "PrivateRouteTableAZ2"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetAZ2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableAZ2" }
      }
    },

    "NatSecurityGroup" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "External Access Security Group",
        "VpcId" : { "Ref" : "VPC" },
		"SecurityGroupIngress" : [{
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : { "Ref" : "ServerAccess" }
        }],
		"Tags" : [
			{ "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "EXTERNAL_ACCESS_SECURITY_GROUP" ] ] }},
		    { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
			{ "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ]
      }
    },

    "NatSecurityGroupIngress1" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
		"GroupId": { "Ref": "NatSecurityGroup" },
		"IpProtocol": "icmp",
		"FromPort": "-1",
		"ToPort": "-1",
		"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NatSecurityGroupIngress22" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
		"GroupId": { "Ref": "NatSecurityGroup" },
		"IpProtocol": "tcp",
		"FromPort": "22",
		"ToPort": "22",
		"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },
    

    "NatSecurityGroupIngress80" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
		"GroupId": { "Ref": "NatSecurityGroup" },
		"IpProtocol": "tcp",
		"FromPort": "80",
		"ToPort": "80",
		"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

	
    "NatSecurityGroupIngress443" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
		"GroupId": { "Ref": "NatSecurityGroup" },
		"IpProtocol": "tcp",
		"FromPort": "443",
		"ToPort": "443",
		"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NATAZ1" : {
      "DependsOn" : ["PublicSubnetAZ1", "NatSecurityGroup"],
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "KeyName"  : { "Ref" : "KeyPairName" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "NatRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
		"NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "NatSecurityGroup" }],
          "AssociatePublicIpAddress" : "true",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "PublicSubnetAZ1" }
        }],
		"Tags" : [
			{ "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" },"NATAZ1" ] ] }},  
		    { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
			{ "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
        ],
	"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
	  "#!/bin/bash\n",
	  "yum update -y && yum install -y yum-cron && chkconfig yum-cron on"
	]]}}
      }
    },


      "NATAZ2" : {
	  "DependsOn" : ["PublicSubnetAZ2", "NatSecurityGroup"],
	  "Type" : "AWS::EC2::Instance",
	  "Properties" : {
              "InstanceType"      : "t2.micro",
              "KeyName"           : { "Ref" : "KeyPairName" },
              "SourceDestCheck"   : "false",
              "ImageId"           : { "Fn::FindInMap" : [ "NatRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
	      "NetworkInterfaces" : [{
		  "GroupSet"                 : [{ "Ref" : "NatSecurityGroup" }],
		  "AssociatePublicIpAddress" : "true",
		  "DeviceIndex"              : "0",
		  "DeleteOnTermination"      : "true",
		  "SubnetId"                 : { "Ref" : "PublicSubnetAZ2" }
              }],
	      "Tags" : [
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" },"NATAZ2" ] ] }},  
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
              ],
	      "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
		  "#!/bin/bash\n",
		  "yum update -y && yum install -y yum-cron && chkconfig yum-cron on"
	      ]]}}
	  }
      },

      
    "PrivateRouteAZ1" : {
      "DependsOn" : ["PrivateRouteTableAZ1", "NATAZ1"],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableAZ1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATAZ1" }
      }
    },

    "PrivateRouteAZ2" : {
      "DependsOn" : ["PrivateRouteTableAZ2", "NATAZ2"],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableAZ2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATAZ2" }
      }
    },

      
	
      "WebServerSecurityGroup" : {
	  "DependsOn" : ["VPC"],
	  "Type" : "AWS::EC2::SecurityGroup",
	  "Properties" : {
              "GroupDescription" : "Web Server Security Group",
              "VpcId" : { "Ref" : "VPC" },
	      "SecurityGroupIngress" : [{
		  "IpProtocol" : "tcp",
		  "FromPort" : "22",
		  "ToPort" : "22",
		  "CidrIp" : { "Ref" : "ServerAccess" }
              }
					,{
					    "IpProtocol" : "tcp",
					    "FromPort" : "80",
					    "ToPort" : "80",
					    "CidrIp" : { "Ref" : "ServerAccess" }
					}
					,{
					    "IpProtocol" : "tcp",
					    "FromPort" : "443",
					    "ToPort" : "443",
					    "CidrIp" : { "Ref" : "ServerAccess" }
					}
				       ],
	      "Tags" : [
		  { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" }, "WEB_SERVER_SECURITY_GROUP" ] ] }},
		  { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
		  { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
              ]
	  }
      },

	
      "WebServerAZ1" : {
	  "DependsOn" : ["PublicSubnetAZ1"],
	  "Type" : "AWS::EC2::Instance",
	  "Properties" : {
          "InstanceType" : "t2.small",
          "KeyName"  : { "Ref" : "KeyPairName" },
          "SourceDestCheck" : "false",
          "ImageId" : { "Fn::FindInMap" : [ "MachineImages", "WebServer", "AMI" ]},
	  "NetworkInterfaces" : [{
              "GroupSet"                 : [{ "Ref" : "WebServerSecurityGroup" }],
              "AssociatePublicIpAddress" : "true",
              "DeviceIndex"              : "0",
              "DeleteOnTermination"      : "true",
              "SubnetId"                 : { "Ref" : "PublicSubnetAZ1" }
          }],
	  "Tags" : [
	    { "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" },"WEB SERVER AZ1" ] ] }},  
	    { "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
	    { "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
          ],
	  "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
	                 "#!/bin/sh\n",
			 "yum -y install httpd && chkconfig httpd on && /etc/init.d/httpd start"
	                ]]}}
	  }
      },
	

      "WebServerAZ2" : {
		  "DependsOn" : ["PublicSubnetAZ2"],
		  "Type" : "AWS::EC2::Instance",
		  "Properties" : {
			  "InstanceType" : "t2.small",
			  "KeyName"  : { "Ref" : "KeyPairName" },
			  "SourceDestCheck" : "false",
			  "ImageId" : { "Fn::FindInMap" : [ "MachineImages", "WebServer", "AMI" ]},
		  "NetworkInterfaces" : [{
				  "GroupSet"                 : [{ "Ref" : "WebServerSecurityGroup" }],
				  "AssociatePublicIpAddress" : "true",
				  "DeviceIndex"              : "0",
				  "DeleteOnTermination"      : "true",
				  "SubnetId"                 : { "Ref" : "PublicSubnetAZ2" }
			  }],
		  "Tags" : [
			{ "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" },"WEB SERVER AZ2" ] ] }},  
			{ "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
			{ "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
			  ],
		  "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
						 "#!/bin/sh\n",
				 "yum -y install httpd && chkconfig httpd on && /etc/init.d/httpd start"
		  ]]}}
		  }
	  },
	
	  "HttpELB" : {
	  "DependsOn" : ["WebServerAZ1", "WebServerAZ2"],	
		"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
		"Properties": {
			"CrossZone" : "true",
			"HealthCheck" : {
				    "HealthyThreshold" : "10",
				    "Interval" : "30",
				    "Target" : "HTTP:80/elbtest.html",
				    "Timeout" : "5",
					"UnhealthyThreshold" : "2"
			},
			"Instances" : [ { "Ref" : "WebServerAZ1" }, { "Ref" : "WebServerAZ2" } ],
			"LoadBalancerName" : "HTTPELB",
			"Listeners" : [ {
			   "InstancePort" : "80",
			   "InstanceProtocol" : "HTTP",
			   "LoadBalancerPort" : "80",
			   "Protocol" : "HTTP"
			}],
			"Scheme" : "internet-facing",
			"SecurityGroups" : [ { "Ref" : "WebServerSecurityGroup" } ],
			"Subnets" : [ { "Ref" : "PublicSubnetAZ1" }, { "Ref" : "PublicSubnetAZ2" } ],
			"Tags" : [
				{ "Key" : "Name", "Value" : { "Fn::Join" : [ "_", [ { "Ref" : "SystemName" },"HTTP_ELB" ] ] }},  
				{ "Key" : "SystemName", "Value": { "Ref" : "SystemName" }  },
				{ "Key": "Environment", "Value": { "Fn::FindInMap" : [ "Naming", "InstanceValues", "Environment" ]}}
			]
		}
	}
},
    
  "Outputs" : {
    "NATAZ1IP" : {
      "Description" : "NAT AZ1 IP address",
      "Value" : { "Fn::GetAtt" : [ "NATAZ1", "PublicIp" ] }
    }
  }
  
}

